In [2]: x = np.array([[0,0],[1,1],[2,4],[3,9],[4,16],[5,25]])

In [3]: print(x)
[[ 0  0]
 [ 1  1]
 [ 2  4]
 [ 3  9]
 [ 4 16]
 [ 5 25]]

In [10]: print(np.sum(x, axis=0,keepdims=True))
[[15 55]]

In [11]: print(np.sum(x, axis=1,keepdims=True))
[[ 0]
 [ 2]
 [ 6]
 [12]
 [20]
 [30]]

In [12]: print(x[1:,])
[[ 1  1]
 [ 2  4]
 [ 3  9]
 [ 4 16]
 [ 5 25]]

In [13]: x = x[1:,]

In [14]: print(x)
[[ 1  1]
 [ 2  4]
 [ 3  9]
 [ 4 16]
 [ 5 25]]

In [15]: print(np.sum(x, axis=0,keepdims=True))
[[15 55]]

In [16]: print(np.sum(x, axis=1,keepdims=True))
[[ 2]
 [ 6]
 [12]
 [20]
 [30]]

In [17]: print((1 / x.shape[0]) * np.sum(x, axis=0,keepdims=True))
[[  3.  11.]]

In [18]: mu = (1 / x.shape[0]) * np.sum(x, axis=0,keepdims=True)

In [19]: print (x - mu)
[[ -2. -10.]
 [ -1.  -7.]
 [  0.  -2.]
 [  1.   5.]
 [  2.  14.]]

In [20]: y = x

In [21]: print(y)
[[ 1  1]
 [ 2  4]
 [ 3  9]
 [ 4 16]
 [ 5 25]]

In [22]: y-=mu
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    y-=mu
TypeError: Cannot cast ufunc subtract output from dtype('float64') to dtype('int64') with casting rule 'same_kind'

In [23]: y = y - mu

In [32]: print(y)
[[ -2. -10.]
 [ -1.  -7.]
 [  0.  -2.]
 [  1.   5.]
 [  2.  14.]]

In [33]: 


===

In [35]: x * 2
Out[35]: 
array([[ 2,  2],
       [ 4,  8],
       [ 6, 18],
       [ 8, 32],
       [10, 50]])

In [36]: print(x)
[[ 1  1]
 [ 2  4]
 [ 3  9]
 [ 4 16]
 [ 5 25]]

In [37]: print((1 / x.shape[0]) * np.sum(x * 2, axis=0, keepdims=True))
[[  6.  22.]]

In [39]: sigmasqr = (1 / x.shape[0]) * np.sum(x * 2, axis=0, keepdims=True)

In [40]: print(sigmasqr)
[[  6.  22.]]

In [41]: print(x / sigmasqr)
[[ 0.16666667  0.04545455]
 [ 0.33333333  0.18181818]
 [ 0.5         0.40909091]
 [ 0.66666667  0.72727273]
 [ 0.83333333  1.13636364]]

In [42]: print(x)
[[ 1  1]
 [ 2  4]
 [ 3  9]
 [ 4 16]
 [ 5 25]]

In [43]: 